#version: '3'
#services:
#  postgres:
#    container_name: postgres
#    image: postgres
#    environment:
#      POSTGRES_USER: postgres
#      POSTGRES_PASSWORD: 12345
#      POSTGRES_DB: cine_vision
#    volumes:
#      - postgres:/data/postgres
#    ports:
#      - "5432:5432"
#    networks:
#      - cinevision
#    restart: unless-stopped
#    healthcheck:
#      test: [ "CMD-SHELL", "pg_isready -U postgres -d cine_vision" ]
#      interval: 10s
#      retries: 5
#      start_period: 10s
#      timeout: 5s  # Removed ports section
#
#  mongodb:
#    container_name: mongodb
#    image: mongo
#    volumes:
#      - data:/data/db
#    environment:
#      - MONGO_INITDB_ROOT_USERNAME=rootuser
#      - MONGO_INITDB_ROOT_PASSWORD=rootpass
#    networks:
#      - cinevision
#
#  mongo-express:
#    container_name: mongo-express
#    image: mongo-express
#    restart: always
#    ports:
#      - "8091:8081"
#    environment:
#      - ME_CONFIG_MONGODB_ADMINUSERNAME=rootuser
#      - ME_CONFIG_MONGODB_ADMINPASSWORD=rootpass
#      - ME_CONFIG_MONGODB_SERVER=mongodb
#    networks:
#      - cinevision
#
#  zookeeper:
#    container_name: zookeeper
#    image: wurstmeister/zookeeper
#    ports:
#      - "2181:2181"
#    networks:
#      - cinevision
#
#  kafka:
#    container_name: kafka
#    image: wurstmeister/kafka
#    ports:
#      - "9092:9092"
#    environment:
#      KAFKA_ADVERTISED_HOST_NAME: localhost
#      KAFKA_ZOOKEEPER_CONNECT: 'zookeeper:2181'
#    depends_on:
#      - zookeeper
#    networks:
#      - cinevision
#
#  keycloak:
#    container_name: keycloak
#    image: quay.io/keycloak/keycloak:18.0.2
#    environment:
#      - KEYCLOAK_ADMIN=admin
#      - KEYCLOAK_ADMIN_PASSWORD=admin
#    ports:
#      - "8182:8080"
#    command:
#      - start-dev
#    networks:
#      - cinevision
#
#  zipkin:
#    container_name: zipkin
#    image: openzipkin/zipkin
#    ports:
#      - "9411:9411"
#    networks:
#      - cinevision
#
#  redis:
#    container_name: redis
#    image: redis
#    ports:
#      - "6379:6379"
#    networks:
#      - cinevision

#  movie-service:
#    build:
#      context: ./movieService
#      dockerfile: Dockerfile
#    container_name: movie-service
#    ports:
#      - "8081:8080"
#    networks:
#      - cinevision
#    depends_on:
#      - postgres
#      - eureka-server
#    command: [ "./wait-for-it.sh", "postgres:5432", "-t", "60", "--", "java", "-jar", "movie-service.jar" ]
#
#
#  eureka-server:
#    build:
#      context: ./eureka-server
#      dockerfile: Dockerfile
#    container_name: eureka-server
#    ports:
#      - "8762:8761"
#    networks:
#      - cinevision
#
#  api-gateway:
#    build:
#      context: ./api-gateway
#      dockerfile: Dockerfile
#    container_name: api-gateway
#    ports:
#      - "8080:8080"
#    networks:
#      - cinevision
#    depends_on:
#      - eureka-server
#
#  user-service:
#    build:
#      context: ./userService
#      dockerfile: Dockerfile
#    container_name: user-service
#    ports:
#      - "8082:8080"
#    networks:
#      - cinevision
#    depends_on:
#      - mongodb
#      - redis
#      - eureka-server
#
#  frontend:
#    build:
#      context: ./frontend
#    container_name: frontend
#    ports:
#      - "3000:3000"
#    depends_on:
#      - api-gateway
#    networks:
#      - cinevision

#networks:
#  cinevision:
#    driver: bridge
#
#volumes:
#  postgres:
#  data:


version: '3'
services:
  postgres:
    container_name: postgres
    image: postgres
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: 12345
      POSTGRES_DB: cine_vision
      PG_DATA: /data/postgres
    volumes:
      - postgres:/data/postgres
    ports:
      - "5432:5432"
    networks:
      - postgres
    restart: unless-stopped
  mongodb:
    container_name: mongodb
    image: mongo
    ports:
      - "27017:27017"
    volumes:
      - data:/data/db
    environment:
      - MONGO_INITDB_ROOT_USERNAME=rootuser
      - MONGO_INITDB_ROOT_PASSWORD=rootpass
  mongo-express:
    container_name: mongo-express
    image: mongo-express
    restart: always
    ports:
      - "8091:8081"
    environment:
      - ME_CONFIG_MONGODB_ADMINUSERNAME=rootuser
      - ME_CONFIG_MONGODB_ADMINPASSWORD=rootpass
      - ME_CONFIG_MONGODB_SERVER=mongodb

  zookeeper:
    container_name: zookeeper
    image: wurstmeister/zookeeper
    ports:
      - "2181:2181"
  kafka:
    container_name: kafka
    image: wurstmeister/kafka
    ports:
      - "9092:9092"
    environment:
      KAFKA_ADVERTISED_HOST_NAME: localhost
      KAFKA_ZOOKEEPER_CONNECT: 'zookeeper:2181'

    depends_on:
      - zookeeper

  keycloak:
    container_name: keycloak
    image: quay.io/keycloak/keycloak:18.0.2
    environment:
      - KEYCLOAK_ADMIN=admin
      - KEYCLOAK_ADMIN_PASSWORD=admin
    ports:
      - "8181:8080"
    command:
      - start-dev
  zipkin:
    container_name: zipkin
    image: openzipkin/zipkin
    ports:
      - "9411:9411"

  redis:
    container_name: redis
    image: redis
    ports:
      - "6379:6379"

networks:
  postgres:
    driver: bridge
#  default:
#    name: mongodb_network
volumes:
  postgres:
  data:
